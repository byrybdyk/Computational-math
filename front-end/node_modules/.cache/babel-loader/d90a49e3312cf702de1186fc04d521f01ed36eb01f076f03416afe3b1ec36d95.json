{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\Computational-math\\\\front-end\\\\src\\\\test.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestPage() {\n  _s();\n  const [response, setResponse] = useState('');\n  const fetchData = async () => {\n    try {\n      const res = await fetch('http://localhost:8080/api/data'); // Замените URL на ваш REST-эндпоинт\n      const data = await res.json();\n      setResponse(JSON.stringify(data));\n    } catch (error) {\n      console.error('Ошибка при получении данных:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440 REST-\\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0430 \\u043D\\u0430 Spring Boot \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0442\\u0432\\u0435\\u0442:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n  // <div>\n  //     <Link to=\"/\">Перейти на другую страницу</Link>\n  // </div>\n}\n_s(TestPage, \"teEhHdFydR0COjJNARuL9EDEZdU=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","TestPage","_s","response","setResponse","fetchData","res","fetch","data","json","JSON","stringify","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/GIT/Computational-math/front-end/src/test.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction TestPage() {\r\n    const [response, setResponse] = useState('');\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await fetch('http://localhost:8080/api/data'); // Замените URL на ваш REST-эндпоинт\r\n            const data = await res.json();\r\n            setResponse(JSON.stringify(data));\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Пример REST-запроса на Spring Boot приложение</h1>\r\n            <button onClick={fetchData}>Отправить запрос</button>\r\n            <div>\r\n                <h2>Ответ:</h2>\r\n                <pre>{response}</pre>\r\n            </div>\r\n        </div>\r\n    );\r\n    // <div>\r\n    //     <Link to=\"/\">Перейти на другую страницу</Link>\r\n    // </div>\r\n\r\n}\r\n\r\nexport default TestPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;MAC3D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BL,WAAW,CAACM,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDlB,OAAA;MAAQmB,OAAO,EAAEd,SAAU;MAAAS,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDlB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACflB,OAAA;QAAAc,QAAA,EAAMX;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;EAEV;EACA;EACA;AAEJ;AAAChB,EAAA,CA3BQD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA6BjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}